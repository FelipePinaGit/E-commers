üì¨ Uso con Postman
## Uso de Headers en Postman
Para realizar las solicitudes HTTP a este microservicio usando Postman, es recomendable configurar los siguientes headers:
- **Content-Type:** `application/json`  
  Indica que el cuerpo de la petici√≥n est√° en formato JSON.
### C√≥mo agregar el header en Postman:
1. Abre Postman y selecciona o crea la solicitud que quieres probar.
2. Ve a la pesta√±a **Headers**.
3. Agrega una nueva clave con el nombre `Content-Type`.
4. Pon el valor `application/json`.

Esto asegura que el servidor interprete correctamente los datos enviados en el body de la solicitud.
---
**Ejemplo de header configurado en Postman:**

| KEY          | VALUE             |
|--------------|-------------------|
| Content-Type | application/json  |

---
Con esta configuraci√≥n, podr√°s enviar correctamente tus peticiones POST, PUT, PATCH o DELETE con datos en formato JSON.
Con Postman pod√©s probar las distintas operaciones (endpoints) de tu API de clientes para gestionar datos de clientes y sus tel√©fonos.

Microservicio Cliente

1. Ver todos los clientes
M√©todo: GET
    URL: http://localhost:<puerto>/clientes
        Qu√© hace: Obtiene la lista completa de clientes con sus tel√©fonos.

2. Crear un cliente nuevo
M√©todo: POST
    URL: http://localhost:<puerto>/clientes
    Body (JSON):

{
  "rut": "20123456789",
  "nombre": "Juan P√©rez",
  "calle": "Av. Libertad", 
  "numero": 123,
  "ciudad": "Buenos Aires",
  "telefonos": ["1145678901", "1198765432"]
}
        Qu√© hace: Crea un cliente nuevo con los datos y tel√©fonos proporcionados.

3. Editar un cliente (actualizar datos completos o parciales)
M√©todo: PUT
URL: http://localhost:<puerto>/clientes/:rut (Ejemplo: /clientes/20123456789)
    Body (JSON) con los datos que quer√©s modificar, por ejemplo, solo cambiar la ciudad:

{
  "ciudad": "Rosario"
}
        Qu√© hace: Actualiza los datos del cliente identificado por el rut. Si inclu√≠s tel√©fonos,
        reemplaza todos los tel√©fonos anteriores por los nuevos. Si no quer√©s cambiar tel√©fonos, simplemente omitilos en el body.

4. Eliminar un cliente
M√©todo: DELETE
    URL: http://localhost:<puerto>/clientes/:rut (Ejemplo: /clientes/20123456789)
        Qu√© hace: Elimina el cliente y todos sus tel√©fonos relacionados.


Microservicio Cat√°logo
Este servicio maneja productos, categor√≠as y proveedores. Con Postman pod√©s probar los endpoints para consultar, crear, modificar y eliminar productos, as√≠ como actualizar el stock.

Ejemplos de operaciones:

Obtener todos los productos
M√©todo: GET
  URL: http://localhost:<puerto>/api/productos
Qu√© hace: Devuelve la lista completa de productos.

Obtener un producto por ID
M√©todo: GET
  URL: http://localhost:<puerto>/api/productoss/:id (Ejemplo: /productos/1)
Qu√© hace: Devuelve los datos del producto solicitado.

Crear un nuevo producto
M√©todo: POST
  URL: http://localhost:<puerto>/api/productos
  Body (JSON):

{
  "nombre": "Filtro de aceite",
  "precio": 1500,
  "stock": 20,
  "categoriaId": 3,
  "proveedorId": 2
}

Qu√© hace: Agrega un producto nuevo con los datos especificados.

Actualizar un producto (ej. stock o precio)
M√©todo: PUT
  URL: http://localhost:<puerto>/api/productos:id
  Body (JSON):

{
  "stock": 15
}

Qu√© hace: Actualiza el producto con el ID dado, modificando solo los campos enviados.

Eliminar un producto
M√©todo: DELETE
  URL: http://localhost:<puerto>/api/productos/:id
Qu√© hace: Elimina el producto indicado.

Microservicio Ventas
Este servicio registra ventas y gestiona la l√≥gica de stock y anulaci√≥n. Us√° Postman para probar creaci√≥n, consulta, actualizaci√≥n y anulaci√≥n de ventas.

Ejemplos de operaciones:

Crear una venta
M√©todo: POST
  URL: http://localhost:<puerto>/ventas (ajustar puerto si es necesario)
  Body (JSON):

{
  "fecha": "2025-05-19",
  "clienteId": "20123456789", (rut)
  "descuento": 5,
  "detalles": [
    { "productoId": 1, "cantidad": 2 },
    { "productoId": 3, "cantidad": 1 }
  ]
}

Qu√© hace: Registra una nueva venta, valida stock en cat√°logo y descuenta las cantidades vendidas.

Obtener todas las ventas
M√©todo: GET
  URL: http://localhost:<puerto>/ventas
Qu√© hace: Devuelve todas las ventas registradas.

Actualizar una venta
M√©todo: PUT
  URL: http://localhost:<puerto>/ventas:id
  Body (JSON):

{
  "descuento": 10
}

Qu√© hace: Modifica la venta con el ID especificado (por ejemplo, cambiar descuento o productos).

Anular una venta
M√©todo: PUT
  URL: http://localhost:<puerto>/ventas/:id/anular
Qu√© hace: Cambia el estado de la venta a "ANULADA" y devuelve el stock al cat√°logo.

Consejos generales para usar Postman
Siempre usar la pesta√±a Body > raw > JSON para enviar datos en POST y PUT.

Verificar que los microservicios est√©n corriendo y que la URL y puerto sean correctos.

Revisar la respuesta del servidor para confirmar √©xito o detectar errores.

Usar la consola de Postman para ver detalles de la solicitud y respuesta si hay problemas.
